Python 

Introduction to Python
----------------------

Python language characteristics
--------------------------------

The Python execution model

Leveraging Python Built-in Types
--------------------------------

Manipulating string and numeric literals
----------------------------------------

Declaring and initializing variables
Performing arithmetic calculations
Making decisions and performing iterations
Formatting and slicing strings

Aggregating related data
-------------------------

Accessing positional information in lists
Representing ordered data with tuples
Consistently handling data collections with iterators

Organizing and Structuring Code
--------------------------------

Defining and calling functions
-------------------------------------

Positional, keyword and default arguments
Implementing variable-length argument lists
Recursing and generator functions

Grouping code into modules
-------------------------------------
Importing and reloading modules
Referencing functions from modules by qualification
Combining modules into packages

Implementing Classes and Objects
-------------------------------------


Declaring and modifying objects
-------------------------------------
Initializing objects with constructors
Accessing derived data with properties
Recognizing the role of static and class methods
Overloading operators
Inheritance and polymorphism
-------------------------------------
Reusing functionality through inheritance
Defining abstract classes and interfaces
Overriding methods for dynamic behavior
Tracing the scope in the namespace
Enhancing functionality with class decorators
Manipulating the File System
-------------------------------------

Managing files
Reading and writing text and binary files
Importing the OS module for directory management
Increasing program robustness through handling exceptions
-------------------------------------
Maintaining program control with error handlers
Detecting errors and raising exceptions
Interfacing with Relational Databases
-------------------------------------
Establishing communication
-------------------------------------
Creating a SQL database connection
Instantiating cursors to access a database
Executing SQL statements within a Python program
-------------------------------------
Retrieving desired data sets
Updating the database with action statements
Constructing a GUI with Tkinter
-------------------------------------
Building the user interface
-------------------------------------
Defining a window layout
Placing widgets
Listening for interface events
-------------------------------------
Providing menu items
Responding to mouse clicks
Binding event handlers

Developing Web Applications
-------------------------------------
Analyzing the request processing pipeline
-------------------------------------
Positioning the role of Python
Mapping requests to Python scripts
Developing MVC with Python
-------------------------------------
Integrating the model with a database
Processing requests with Python controllers
Benefiting from the Django framework
-------------------------------------
Improving productivity with code reduction
Simplifying application development
Accessing the database and producing HTML with Django templates
